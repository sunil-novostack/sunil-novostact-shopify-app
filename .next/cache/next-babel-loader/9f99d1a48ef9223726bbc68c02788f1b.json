{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids:[ID!]!){\n  nodes(ids:$ids){\n    ... on Product {\n      title\n      handle\n      id\n      images(first:1){\n        edges{\n          node{\n            originalSrc\n            altText\n          }\n        }\n      }\n      variants(first:1){\n        edges{\n          node{\n            price\n            id\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nfunction ProductList() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  });\n  if (loading) return __jsx(\"div\", null, \"loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log('stored products', data);\n  return __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: {\n      singular: 'Product',\n      plural: 'Products'\n    },\n    items: data.nodes,\n    renderItem: item => {\n      const media = __jsx(Thumbnail, {\n        source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n        alt: item.images.edges[0] ? item.images.edges[0].altText : ''\n      });\n\n      const price = item.variants.edges[0].node.price;\n      return __jsx(ResourceList.Item, {\n        id: item.id,\n        media: media,\n        accessibilityLabel: `view Details for ${item.title}`\n      }, __jsx(Stack, null, __jsx(Stack.Item, {\n        fill: true\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price))));\n    }\n  }));\n}\n\nexport default ProductList;","map":{"version":3,"sources":["E:/shopify-app-dev/dev/shopify-cod-app/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","loading","error","data","variables","ids","get","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAGA,MAAMC,kBAAkB,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AA4BA,SAASS,WAAT,GAAuB;AAEnB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBX,QAAQ,CAACO,kBAAD,EAAqB;AAAEK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEP,KAAK,CAACQ,GAAN,CAAU,KAAV;AAAP;AAAb,GAArB,CAAvC;AACA,MAAIL,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACK,OAAZ,CAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BN,IAA9B;AAEA,SACI,MAAC,IAAD,QACI,MAAC,YAAD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,YAAY,EAAE;AAAEO,MAAAA,QAAQ,EAAE,SAAZ;AAAsBC,MAAAA,MAAM,EAAE;AAA9B,KAFlB;AAGI,IAAA,KAAK,EAAGR,IAAI,CAACS,KAHjB;AAII,IAAA,UAAU,EAAGC,IAAI,IAAI;AACjB,YAAMC,KAAK,GACP,MAAC,SAAD;AACI,QAAA,MAAM,EACFD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAAjD,GAA8D,EAFtE;AAII,QAAA,GAAG,EACCL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBG,OAA5C,GAAsD;AAL9D,QADJ;;AAUA,YAAMC,KAAK,GAAIP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA3C;AACA,aACI,MAAC,YAAD,CAAc,IAAd;AACI,QAAA,EAAE,EAAEP,IAAI,CAACS,EADb;AAEI,QAAA,KAAK,EAAER,KAFX;AAGI,QAAA,kBAAkB,EAAG,oBAAmBD,IAAI,CAACU,KAAM;AAHvD,SAKA,MAAC,KAAD,QACI,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI;AAAhB,SACI,kBACI,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACKV,IAAI,CAACU,KADV,CADJ,CADJ,CADJ,EAQI,MAAC,KAAD,CAAO,IAAP,QACI,sBAAKH,KAAL,CADJ,CARJ,CALA,CADJ;AAoBH;AApCL,IADJ,CADJ;AA0CH;;AACD,eAAepB,WAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\r\nimport store from 'store-js';\r\n\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\nquery getProducts($ids:[ID!]!){\r\n  nodes(ids:$ids){\r\n    ... on Product {\r\n      title\r\n      handle\r\n      id\r\n      images(first:1){\r\n        edges{\r\n          node{\r\n            originalSrc\r\n            altText\r\n          }\r\n        }\r\n      }\r\n      variants(first:1){\r\n        edges{\r\n          node{\r\n            price\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nfunction ProductList (){\r\n\r\n    const {loading, error, data} = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids') } });\r\n    if (loading) return <div>loading...</div>\r\n    if (error) return <div>{error.message}</div>\r\n    \r\n    console.log('stored products',data);\r\n    \r\n    return(\r\n        <Card>\r\n            <ResourceList\r\n                showHeader\r\n                resourceName={{ singular: 'Product',plural: 'Products' }}\r\n                items={ data.nodes }\r\n                renderItem={ item => {\r\n                    const media = (\r\n                        <Thumbnail \r\n                            source={\r\n                                item.images.edges[0] ? item.images.edges[0].node.originalSrc :''\r\n                            }\r\n                            alt={\r\n                                item.images.edges[0] ? item.images.edges[0].altText : ''\r\n                            }\r\n                        />\r\n                    );\r\n                    const price  = item.variants.edges[0].node.price;\r\n                    return(\r\n                        <ResourceList.Item\r\n                            id={item.id}\r\n                            media={media}\r\n                            accessibilityLabel={`view Details for ${item.title}`}\r\n                        >\r\n                        <Stack>\r\n                            <Stack.Item fill>\r\n                                <h3>\r\n                                    <TextStyle variation='strong'>\r\n                                        {item.title}\r\n                                    </TextStyle>\r\n                                </h3>\r\n                            </Stack.Item>\r\n                            <Stack.Item>\r\n                                <p>${price}</p>\r\n                            </Stack.Item>\r\n                        </Stack>\r\n                        </ResourceList.Item>\r\n                    )\r\n                }}\r\n            />\r\n        </Card>\r\n    )\r\n}\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}