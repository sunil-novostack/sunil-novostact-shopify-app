{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids: [ID!]!){\n    nodes(ids: $ids){\n        ... on Product {\n            title\n            id\n            images(first: 1){\n                edges: {\n                    node {\n                        originalSrc\n                        altText\n                    }\n                }\n            }\n            variants(first: 1){\n                edges: {\n                    node{\n                        price\n                        id\n                    }\n                }\n            }\n        }\n    }\n}\n`;\n\nfunction ProductList() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  });\n  if (loading) return __jsx(\"div\", null, \"loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log('stored products', data);\n  return __jsx(\"div\", null, data.nodes.map(item => {\n    return __jsx(\"p\", {\n      key: item.id\n    }, item.title);\n  }));\n}\n\nexport default ProductList;","map":{"version":3,"sources":["E:/shopify-app-dev/dev/shopify-cod-app/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","loading","error","data","variables","ids","get","message","console","log","nodes","map","item","id","title"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAGA,MAAMC,kBAAkB,GAAGR,GAAK;;;;;;;;;;;;;;;;;;;;;;;;;CAAhC;;AA2BA,SAASS,WAAT,GAAuB;AAEnB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBX,QAAQ,CAACO,kBAAD,EAAqB;AAAEK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEP,KAAK,CAACQ,GAAN,CAAU,KAAV;AAAP;AAAb,GAArB,CAAvC;AACA,MAAIL,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACK,OAAZ,CAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BN,IAA9B;AAEA,SACI,mBAEQA,IAAI,CAACO,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAI;AACnB,WACA;AAAG,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAb,OAAkBD,IAAI,CAACE,KAAvB,CADA;AAGH,GAJD,CAFR,CADJ;AAWH;;AACD,eAAed,WAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\r\nimport store from 'store-js';\r\n\r\n\r\nconst GET_PRODUCTS_BY_ID = gql `\r\nquery getProducts($ids: [ID!]!){\r\n    nodes(ids: $ids){\r\n        ... on Product {\r\n            title\r\n            id\r\n            images(first: 1){\r\n                edges: {\r\n                    node {\r\n                        originalSrc\r\n                        altText\r\n                    }\r\n                }\r\n            }\r\n            variants(first: 1){\r\n                edges: {\r\n                    node{\r\n                        price\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nfunction ProductList (){\r\n\r\n    const {loading, error, data} = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids') } });\r\n    if (loading) return <div>loading...</div>\r\n    if (error) return <div>{error.message}</div>\r\n    \r\n    console.log('stored products',data);\r\n    \r\n    return(\r\n        <div>\r\n            {\r\n                data.nodes.map(item => {\r\n                    return (\r\n                    <p key={item.id}>{item.title}</p>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}